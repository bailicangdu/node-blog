"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_core_1 = require("apollo-server-core");
var GraphiQL = require("apollo-server-module-graphiql");
function graphqlKoa(options) {
    if (!options) {
        throw new Error('Apollo Server requires options.');
    }
    if (arguments.length > 1) {
        throw new Error("Apollo Server expects exactly one argument, got " + arguments.length);
    }
    var graphqlHandler = function (ctx) {
        return apollo_server_core_1.runHttpQuery([ctx], {
            method: ctx.request.method,
            options: options,
            query: ctx.request.method === 'POST' ? ctx.request.body : ctx.request.query,
        }).then(function (gqlResponse) {
            ctx.set('Content-Type', 'application/json');
            ctx.body = gqlResponse;
        }, function (error) {
            if ('HttpQueryError' !== error.name) {
                throw error;
            }
            if (error.headers) {
                Object.keys(error.headers).forEach(function (header) {
                    ctx.set(header, error.headers[header]);
                });
            }
            ctx.status = error.statusCode;
            ctx.body = error.message;
        });
    };
    return graphqlHandler;
}
exports.graphqlKoa = graphqlKoa;
function graphiqlKoa(options) {
    var graphiqlHandler = function (ctx) {
        var query = ctx.request.query;
        return GraphiQL.resolveGraphiQLString(query, options, ctx).then(function (graphiqlString) {
            ctx.set('Content-Type', 'text/html');
            ctx.body = graphiqlString;
        }, function (error) {
            ctx.status = 500;
            ctx.body = error.message;
        });
    };
    return graphiqlHandler;
}
exports.graphiqlKoa = graphiqlKoa;
//# sourceMappingURL=koaApollo.js.map